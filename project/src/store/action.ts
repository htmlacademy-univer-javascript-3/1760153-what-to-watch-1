import { createAction } from '@reduxjs/toolkit';
import {Films, Comments} from '../types/film';
import {AuthorizationStatus} from '../const';
import Similar from '../types/similar';
import Favorite from '../types/favorite';

export const changeGenre = createAction<{ currentGenre: string }>('films/changeGenre');
export const resetMainPage = createAction('main/resetState');
export const increaseCardCount = createAction('main/increaseCardCount');
export const resetCardCount = createAction('main/resetCardCount');
export const loadFilms = createAction<Films[]>('data/loadFilms');
export const loadFavoriteFilms = createAction<Favorite>('data/loadFavoriteFilms');
export const changeFilmStatus = createAction<Films>('data/changeStatusToView');
export const changePromoStatus = createAction<Films>('data/changePromoStatusToView');
export const setDataLoadedStatus = createAction<boolean>('data/setDataLoadedStatus');
export const requireAuthorization = createAction<AuthorizationStatus>('user/requireAuthorization');
export const setError = createAction<string | null>('app/setError');
export const loadFilm = createAction<Films>('data/loadFilmById');
export const loadComments = createAction<Comments>('data/loadCommentsById');
export const loadSimilar = createAction<Similar>('data/loadSimilarById');
export const setAvatar = createAction<string | null>('user/avatar');
export const setFavoriteCount = createAction<number>('data/setFavoriteCount');
export const redirectToRoute = createAction<string>('app/redirectToRoute');
export const loadPromo = createAction<Films>('data/loadPromo');
export const changeFilmTab = createAction<{ currentTab: string }>('film/changeFilmTab');
export const setFilmFoundStatus = createAction<boolean>('film/setFilmFoundStatus');
export const setFilmLoadedStatus = createAction<boolean>('film/setFilmLoadedStatus');
